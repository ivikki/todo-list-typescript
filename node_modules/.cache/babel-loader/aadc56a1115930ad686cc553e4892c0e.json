{"ast":null,"code":"var _jsxFileName = \"/home/vikki/projects/todo-list-ts/src/components/TodoList.tsx\";\nimport React, { useMemo } from 'react';\nexport const TodoList = ({\n  todos,\n  onToggle,\n  onRemove\n}) => {\n  const removeHandler = (e, id) => {\n    e.preventDefault();\n    onRemove(id);\n  };\n\n  const preparedTodos = useMemo(() => todos.map(todo => ({ ...todo,\n    handleToggle: () => onToggle(todo.id)\n  })), []);\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, preparedTodos.map(todo => /*#__PURE__*/React.createElement(\"li\", {\n    className: `todo ${todo.completed ? \"completed\" : \"\"}`,\n    key: todo.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: todo.handleToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }, todo.title), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons red-text\",\n    onClick: e => removeHandler(e, todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }, \"delete\")))));\n};","map":{"version":3,"sources":["/home/vikki/projects/todo-list-ts/src/components/TodoList.tsx"],"names":["React","useMemo","TodoList","todos","onToggle","onRemove","removeHandler","e","id","preventDefault","preparedTodos","map","todo","handleToggle","completed","title"],"mappings":";AAAA,OAAOA,KAAP,IAA4BC,OAA5B,QAA0C,OAA1C;AASA,OAAO,MAAMC,QAAiC,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KAAmC;AAEhF,QAAMC,aAAa,GAAG,CAACC,CAAD,EAAsBC,EAAtB,KAAqC;AACvDD,IAAAA,CAAC,CAACE,cAAF;AACAJ,IAAAA,QAAQ,CAACG,EAAD,CAAR;AACH,GAHD;;AAKA,QAAME,aAAa,GAAGT,OAAO,CAAC,MAAME,KAAK,CAACQ,GAAN,CAAUC,IAAI,KAAK,EACnD,GAAGA,IADgD;AAEnDC,IAAAA,YAAY,EAAE,MAAMT,QAAQ,CAACQ,IAAI,CAACJ,EAAN;AAFuB,GAAL,CAAd,CAAP,EAGxB,EAHwB,CAA7B;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,aAAa,CAACC,GAAd,CAAkBC,IAAI,iBACnB;AAAI,IAAA,SAAS,EAAG,QAAOA,IAAI,CAACE,SAAL,GAAiB,WAAjB,GAA+B,EAAG,EAAzD;AAA4D,IAAA,GAAG,EAAEF,IAAI,CAACJ,EAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,QAAQ,EAAEI,IAAI,CAACC,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,IAAI,CAACG,KAAZ,CAFJ,eAGI;AAAG,IAAA,SAAS,EAAC,yBAAb;AAAuC,IAAA,OAAO,EAAER,CAAC,IAAID,aAAa,CAACC,CAAD,EAAIK,IAAI,CAACJ,EAAT,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CADJ,CADH,CADL,CADJ;AAaH,CAzBM","sourcesContent":["import React, {useCallback, useMemo} from 'react';\nimport {ITodo} from '../interface';\n\ninterface TodoListProps {\n    todos: ITodo[],\n    onToggle(id: number): void,\n    onRemove(id: number): void\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos, onToggle, onRemove }) => {\n\n    const removeHandler = (e: React.MouseEvent, id: number) => {\n        e.preventDefault();\n        onRemove(id);\n    };\n\n    const preparedTodos = useMemo(() => todos.map(todo => ({\n        ...todo,\n        handleToggle: () => onToggle(todo.id)\n    })), []);\n\n    return(\n        <ul>\n            {preparedTodos.map(todo =>\n                <li className={`todo ${todo.completed ? \"completed\" : \"\"}`} key={todo.id}>\n                    <label>\n                        <input type=\"checkbox\" onChange={todo.handleToggle}/>\n                        <span>{todo.title}</span>\n                        <i className=\"material-icons red-text\" onClick={e => removeHandler(e, todo.id)}>delete</i>\n                    </label>\n                </li>\n            )}\n        </ul>\n    )\n};"]},"metadata":{},"sourceType":"module"}