{"ast":null,"code":"var _jsxFileName = \"/home/vikki/projects/todo-list-ts/src/App.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { NavBar } from \"./components/NavBar\";\nimport { TodoForm } from \"./components/TodoForm\";\nimport { TodoList } from \"./components/TodoList\";\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem('todos') || '[]');\n    setTodos(saved);\n  }, []);\n  useEffect(() => {}, []);\n\n  const addTodoHandler = title => {\n    const todo = {\n      title: title,\n      id: Date.now(),\n      completed: false\n    };\n    setTodos(prev => [todo, ...prev]);\n  };\n\n  const handleToggle = id => {\n    setTodos(prev => prev.map(todo => {\n      if (todo.id === id) {\n        return {\n          title: todo.title,\n          completed: !todo.completed,\n          id: todo.id\n        };\n      }\n\n      return todo;\n    }));\n  };\n\n  const handleRemove = id => {\n    const shouldRemove = window.confirm(\"Вы уверены, что хотите удалить элемент?\");\n\n    if (shouldRemove) {\n      setTodos(prev => prev.filter(todo => todo.id !== id));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TodoForm, {\n    onAdd: addTodoHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TodoList, {\n    todos: todos,\n    onToggle: handleToggle,\n    onRemove: handleRemove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/vikki/projects/todo-list-ts/src/App.tsx"],"names":["React","useEffect","useState","NavBar","TodoForm","TodoList","App","todos","setTodos","saved","JSON","parse","localStorage","getItem","addTodoHandler","title","todo","id","Date","now","completed","prev","handleToggle","map","handleRemove","shouldRemove","window","confirm","filter"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,MAAR,QAAqB,qBAArB;AACA,SAAQC,QAAR,QAAuB,uBAAvB;AACA,SAAQC,QAAR,QAAuB,uBAAvB;;AAGA,MAAMC,GAAa,GAAG,MAAM;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAU,EAAV,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,IAA5C,CAAd;AACAL,IAAAA,QAAQ,CAACC,KAAD,CAAR;AACH,GAHQ,EAGN,EAHM,CAAT;AAKAR,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMa,cAAc,GAAIC,KAAD,IAAmB;AACxC,UAAMC,IAAW,GAAG;AAClBD,MAAAA,KAAK,EAAEA,KADW;AAElBE,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAFc;AAGlBC,MAAAA,SAAS,EAAE;AAHO,KAApB;AAKAZ,IAAAA,QAAQ,CAACa,IAAI,IAAI,CAACL,IAAD,EAAO,GAAGK,IAAV,CAAT,CAAR;AACD,GAPD;;AASA,QAAMC,YAAY,GAAIL,EAAD,IAAgB;AACjCT,IAAAA,QAAQ,CAACa,IAAI,IAAIA,IAAI,CAACE,GAAL,CAASP,IAAI,IAAI;AAC9B,UAAGA,IAAI,CAACC,EAAL,KAAYA,EAAf,EAAmB;AACf,eAAO;AACHF,UAAAA,KAAK,EAAEC,IAAI,CAACD,KADT;AAEHK,UAAAA,SAAS,EAAE,CAACJ,IAAI,CAACI,SAFd;AAGHH,UAAAA,EAAE,EAAED,IAAI,CAACC;AAHN,SAAP;AAKH;;AACD,aAAOD,IAAP;AACC,KATY,CAAT,CAAR;AAWH,GAZD;;AAcA,QAAMQ,YAAY,GAAIP,EAAD,IAAgB;AACjC,UAAMQ,YAAY,GAAGC,MAAM,CAACC,OAAP,CAAe,yCAAf,CAArB;;AACA,QAAGF,YAAH,EAAgB;AACZjB,MAAAA,QAAQ,CAACa,IAAI,IAAIA,IAAI,CAACO,MAAL,CAAYZ,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAhC,CAAT,CAAR;AACH;AACJ,GALD;;AAOA,sBACI,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEH,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEP,KAAjB;AAAwB,IAAA,QAAQ,EAAEe,YAAlC;AAAgD,IAAA,QAAQ,EAAEE,YAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,CADJ;AASD,CAnDD;;AAqDA,eAAelB,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {NavBar} from \"./components/NavBar\";\nimport {TodoForm} from \"./components/TodoForm\";\nimport {TodoList} from \"./components/TodoList\";\nimport {ITodo} from './interface';\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<ITodo[]>([]);\n\n  useEffect(() => {\n      const saved = JSON.parse(localStorage.getItem('todos') || '[]') as ITodo[];\n      setTodos(saved);\n  }, []);\n\n  useEffect(() => {\n\n  }, []);\n\n  const addTodoHandler = (title: string) => {\n    const todo: ITodo = {\n      title: title,\n      id: Date.now(),\n      completed: false\n    };\n    setTodos(prev => [todo, ...prev])\n  };\n\n  const handleToggle = (id: number) => {\n      setTodos(prev => prev.map(todo => {\n          if(todo.id === id) {\n              return {\n                  title: todo.title,\n                  completed: !todo.completed,\n                  id: todo.id\n              }\n          }\n          return todo;\n          }\n      ))\n  };\n\n  const handleRemove = (id: number) => {\n      const shouldRemove = window.confirm(\"Вы уверены, что хотите удалить элемент?\");\n      if(shouldRemove){\n          setTodos(prev => prev.filter(todo => todo.id !== id));\n      }\n  };\n\n  return(\n      <>\n        <NavBar />\n        <div className=\"container\">\n          <TodoForm onAdd={addTodoHandler} />\n          <TodoList todos={todos} onToggle={handleToggle} onRemove={handleRemove} />\n        </div>\n      </>\n  )\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}