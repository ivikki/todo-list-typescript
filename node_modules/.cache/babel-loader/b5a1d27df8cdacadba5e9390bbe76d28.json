{"ast":null,"code":"var _jsxFileName = \"/home/vikki/projects/todo-list-ts/src/components/TodoList.tsx\";\nimport React, { useMemo } from 'react';\nexport const TodoList = ({\n  todos,\n  onToggle,\n  onRemove\n}) => {\n  const preparedTodos = useMemo(() => todos.map(todo => ({ ...todo,\n    handleToggle: () => onToggle(todo.id),\n    handleRemove: e => {\n      e.preventDefault();\n      onRemove(todo.id);\n    }\n  })), [todos]);\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, preparedTodos.map(todo => /*#__PURE__*/React.createElement(\"li\", {\n    className: `todo ${todo.completed ? \"completed\" : \"\"}`,\n    key: todo.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: todo.handleToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }\n  }, todo.title), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons red-text\",\n    onClick: todo.handleRemove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }, \"delete\")))));\n};","map":{"version":3,"sources":["/home/vikki/projects/todo-list-ts/src/components/TodoList.tsx"],"names":["React","useMemo","TodoList","todos","onToggle","onRemove","preparedTodos","map","todo","handleToggle","id","handleRemove","e","preventDefault","completed","title"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,OAAf,QAA6B,OAA7B;AASA,OAAO,MAAMC,QAAiC,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KAAmC;AAEhF,QAAMC,aAAa,GAAGL,OAAO,CAAC,MAAME,KAAK,CAACI,GAAN,CAAUC,IAAI,KAAK,EACnD,GAAGA,IADgD;AAEnDC,IAAAA,YAAY,EAAE,MAAML,QAAQ,CAACI,IAAI,CAACE,EAAN,CAFuB;AAGnDC,IAAAA,YAAY,EAAGC,CAAD,IAAyB;AACnCA,MAAAA,CAAC,CAACC,cAAF;AACAR,MAAAA,QAAQ,CAACG,IAAI,CAACE,EAAN,CAAR;AACH;AANkD,GAAL,CAAd,CAAP,EAOxB,CAACP,KAAD,CAPwB,CAA7B;AASA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,aAAa,CAACC,GAAd,CAAkBC,IAAI,iBACnB;AAAI,IAAA,SAAS,EAAG,QAAOA,IAAI,CAACM,SAAL,GAAiB,WAAjB,GAA+B,EAAG,EAAzD;AAA4D,IAAA,GAAG,EAAEN,IAAI,CAACE,EAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,QAAQ,EAAEF,IAAI,CAACC,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,IAAI,CAACO,KAAZ,CAFJ,eAGI;AAAG,IAAA,SAAS,EAAC,yBAAb;AAAuC,IAAA,OAAO,EAAEP,IAAI,CAACG,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CADJ,CADH,CADL,CADJ;AAaH,CAxBM","sourcesContent":["import React, {useMemo} from 'react';\nimport {ITodo} from '../interface';\n\ninterface TodoListProps {\n    todos: ITodo[],\n    onToggle(id: number): void,\n    onRemove(id: number): void\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos, onToggle, onRemove }) => {\n\n    const preparedTodos = useMemo(() => todos.map(todo => ({\n        ...todo,\n        handleToggle: () => onToggle(todo.id),\n        handleRemove: (e: React.MouseEvent) => {\n            e.preventDefault();\n            onRemove(todo.id);\n        }\n    })), [todos]);\n\n    return(\n        <ul>\n            {preparedTodos.map(todo =>\n                <li className={`todo ${todo.completed ? \"completed\" : \"\"}`} key={todo.id}>\n                    <label>\n                        <input type=\"checkbox\" onChange={todo.handleToggle}/>\n                        <span>{todo.title}</span>\n                        <i className=\"material-icons red-text\" onClick={todo.handleRemove}>delete</i>\n                    </label>\n                </li>\n            )}\n        </ul>\n    )\n};"]},"metadata":{},"sourceType":"module"}