{"ast":null,"code":"var _jsxFileName = \"/home/vikki/projects/todo-list-ts/src/pages/TodosPage.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { TodoForm } from \"../components/TodoForm\";\nimport { TodoList } from \"../components/TodoList\";\nexport const TodosPage = () => {\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem('todos') || '[]');\n    setTodos(saved);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  const addTodoHandler = title => {\n    const todo = {\n      title: title,\n      id: Date.now(),\n      completed: false\n    };\n    setTodos(prev => [todo, ...prev]);\n  };\n\n  const handleToggle = id => {\n    setTodos(prev => prev.map(todo => {\n      if (todo.id === id) {\n        return {\n          title: todo.title,\n          completed: !todo.completed,\n          id: todo.id\n        };\n      }\n\n      return todo;\n    }));\n  };\n\n  const handleRemove = id => {\n    const shouldRemove = window.confirm(\"Вы уверены, что хотите удалить элемент?\");\n\n    if (shouldRemove) {\n      setTodos(prev => prev.filter(todo => todo.id !== id));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TodoForm, {\n    onAdd: addTodoHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TodoList, {\n    todos: todos,\n    onToggle: handleToggle,\n    onRemove: handleRemove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["/home/vikki/projects/todo-list-ts/src/pages/TodosPage.tsx"],"names":["React","useEffect","useState","TodoForm","TodoList","TodosPage","todos","setTodos","saved","JSON","parse","localStorage","getItem","setItem","stringify","addTodoHandler","title","todo","id","Date","now","completed","prev","handleToggle","map","handleRemove","shouldRemove","window","confirm","filter"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,QAAR,QAAuB,wBAAvB;AACA,SAAQC,QAAR,QAAuB,wBAAvB;AAGA,OAAO,MAAMC,SAAmB,GAAG,MAAM;AACrC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAU,EAAV,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,IAA5C,CAAd;AACAL,IAAAA,QAAQ,CAACC,KAAD,CAAR;AACH,GAHQ,EAGN,EAHM,CAAT;AAKAP,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA8BJ,IAAI,CAACK,SAAL,CAAeR,KAAf,CAA9B;AACH,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAIA,QAAMS,cAAc,GAAIC,KAAD,IAAmB;AACtC,UAAMC,IAAW,GAAG;AAChBD,MAAAA,KAAK,EAAEA,KADS;AAEhBE,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAFY;AAGhBC,MAAAA,SAAS,EAAE;AAHK,KAApB;AAKAd,IAAAA,QAAQ,CAACe,IAAI,IAAI,CAACL,IAAD,EAAO,GAAGK,IAAV,CAAT,CAAR;AACH,GAPD;;AASA,QAAMC,YAAY,GAAIL,EAAD,IAAgB;AACjCX,IAAAA,QAAQ,CAACe,IAAI,IAAIA,IAAI,CAACE,GAAL,CAASP,IAAI,IAAI;AAC1B,UAAGA,IAAI,CAACC,EAAL,KAAYA,EAAf,EAAmB;AACf,eAAO;AACHF,UAAAA,KAAK,EAAEC,IAAI,CAACD,KADT;AAEHK,UAAAA,SAAS,EAAE,CAACJ,IAAI,CAACI,SAFd;AAGHH,UAAAA,EAAE,EAAED,IAAI,CAACC;AAHN,SAAP;AAKH;;AACD,aAAOD,IAAP;AACH,KATY,CAAT,CAAR;AAWH,GAZD;;AAcA,QAAMQ,YAAY,GAAIP,EAAD,IAAgB;AACjC,UAAMQ,YAAY,GAAGC,MAAM,CAACC,OAAP,CAAe,yCAAf,CAArB;;AACA,QAAGF,YAAH,EAAgB;AACZnB,MAAAA,QAAQ,CAACe,IAAI,IAAIA,IAAI,CAACO,MAAL,CAAYZ,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAhC,CAAT,CAAR;AACH;AACJ,GALD;;AAMA,sBACI,uDACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEH,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAET,KAAjB;AAAwB,IAAA,QAAQ,EAAEiB,YAAlC;AAAgD,IAAA,QAAQ,EAAEE,YAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CA/CM","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {TodoForm} from \"../components/TodoForm\";\nimport {TodoList} from \"../components/TodoList\";\nimport {ITodo} from \"../interface\";\n\nexport const TodosPage: React.FC = () => {\n    const [todos, setTodos] = useState<ITodo[]>([]);\n\n    useEffect(() => {\n        const saved = JSON.parse(localStorage.getItem('todos') || '[]') as ITodo[];\n        setTodos(saved);\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem('todos', JSON.stringify(todos))\n    }, [todos]);\n\n    const addTodoHandler = (title: string) => {\n        const todo: ITodo = {\n            title: title,\n            id: Date.now(),\n            completed: false\n        };\n        setTodos(prev => [todo, ...prev])\n    };\n\n    const handleToggle = (id: number) => {\n        setTodos(prev => prev.map(todo => {\n                if(todo.id === id) {\n                    return {\n                        title: todo.title,\n                        completed: !todo.completed,\n                        id: todo.id\n                    }\n                }\n                return todo;\n            }\n        ))\n    };\n\n    const handleRemove = (id: number) => {\n        const shouldRemove = window.confirm(\"Вы уверены, что хотите удалить элемент?\");\n        if(shouldRemove){\n            setTodos(prev => prev.filter(todo => todo.id !== id));\n        }\n    };\n    return (\n        <>\n            <TodoForm onAdd={addTodoHandler} />\n            <TodoList todos={todos} onToggle={handleToggle} onRemove={handleRemove} />\n        </>\n    )\n};"]},"metadata":{},"sourceType":"module"}